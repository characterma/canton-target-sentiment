task: "chinese_word_segmentation"
device: 0
data:
  output_dir: "../output/chinese_word_segmentation/bert_crf_canton"
  data_dir: "../data/datasets/internal/cws/canton"
  train: train.json 
  dev: dev.json 
  test: test.json
text_prepro:
  steps:
    - full_to_half
eval:
  batch_size: 64
  model_file: "model.pt"
train:
  model_class: "BERT_CRF"
  kd: 
    use_kd: False
#     teacher_dir: "../output/post_sentiment_20210707_bert_avg/model"
#     loss_type: 'mse'
#     soft_lambda: 0.5
#     kl_T: 5
  seed: 42
  log_steps: 100
  batch_size: 32
  final_model: "best" # "best" or "last"
  optimization_metric: "micro_f1" # "micro_f1" or "macro_f1"
  early_stop: 5
model_params:
  # ================= TDBERT =================
  num_train_epochs: 15
  embedding_trainable: True
  tokenizer_name: "bert-base-chinese"
  pretrained_lm: "bert-base-chinese"
  # output_hidden_act_func: "PReLU"
  # output_hidden_dim: 128
  # output_use_bn: True
  # output_hidden_act_func: null
  # tokenizer_name: "bert-base-chinese"  # source:::tokenizer_type "huggingface:::toastynews/electra-hongkongese-large-discriminator"   
  # pretrained_lm: "bert-base-chinese" # huggingface format "toastynews/electra-hongkongese-large-discriminator" 
  # pretrained_lm_dir: "bert-base-chinese" # huggingface format "toastynews/electra-hongkongese-large-discriminator" 
  # ================= TGSAN =================
  # num_train_epochs: 50
  # pretrained_emb_path: "../data/word_embeddings/sgns.target.word-character.char1-2.dynwin5.thr10.neg5.dim300.iter5"
  # embedding_trainable: False
