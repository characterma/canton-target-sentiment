task: "sequence_classification"
device: 'cpu'
data:
  output_dir: "../config/examples/sequence_classification/BERT_AVG_explain"
  data_dir: "../data/datasets/sample/sequence_classification"
  train: train_sample.json
  dev: train_sample.json
  test: train_sample.json
text_prepro:
  steps:
    - utf8_replace
    - simplified_chinese
    - lower_case
    - full_to_half
eval:
  batch_size: 64
  model_file: "model.pt"
train:
  model_class: "BERT_AVG"
  kd:
    use_kd: False
    teacher_dir: "../output/post_sentiment_20210707_bert_avg/model"
    loss_type: 'mse'
    soft_lambda: 0.5
    kl_T: 5
  seed: 42
  log_steps: 100
  batch_size: 32
  final_model: "best" # "best" or "last"
  optimization_metric: "macro_f1" # "micro_f1" or "macro_f1"
  early_stop: 5
model_params:
  # ================= TDBERT =================
  num_train_epochs: 2
  embedding_trainable: True
  output_hidden_act_func: "PReLU"
  output_hidden_dim: 128
  # output_hidden_act_func: null
  tokenizer_name: "clue/albert_chinese_tiny"
  pretrained_lm: "clue/albert_chinese_tiny"
explanation:
    Lime:
      method: "Lime"

